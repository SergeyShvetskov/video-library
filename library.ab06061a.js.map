{"mappings":"gfAEAA,EAAA,S,WCAA,MAAMC,EAAa,IAAI,EAFvBD,EAAA,SAEuBE,SAEjBC,EAAO,CACXC,aAAcC,SAASC,cAAc,iBACrCC,WAAYF,SAASC,cAAc,eACnCE,iBAAkBH,SAASC,cAAc,yBAO3C,SAASG,EAAoBC,GAC3BP,EAAKI,WAAWI,MAAMC,gBAAkB,cACxCT,EAAKI,WAAWI,MAAME,OAAS,oBAC/BV,EAAKC,aAAaO,MAAMC,gBAAkB,UAC1CT,EAAKC,aAAaO,MAAME,OAAS,oBAcnC,WACEV,EAAKK,iBAAiBM,UAAY,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,aAAaC,OAAQF,GAAK,EAE5C,GAAIC,aAAaE,IAAIH,GAAGI,SAAS,WAAY,CAE3C,MAAMC,EAAUC,KAAKC,MAAMN,aAAaO,QAAQP,aAAaE,IAAIH,KACjEd,EAAWuB,GAAKJ,EAChBnB,EACGwB,kBACAC,MACC,EAACC,OACCA,EAAMH,GACNA,EAAEI,eACFA,EAAcC,YACdA,EAAWC,aACXA,EAAYC,aACZA,MAEAC,EAAW,C,OACTL,E,GACAH,E,eACAI,E,YACAC,E,aACAC,E,aACAC,GACA,G,EAtCZE,E,CA8EF,SAASD,GAAWL,OAClBA,EAAMH,GACNA,EAAEI,eACFA,EAAcC,YACdA,EAAWC,aACXA,EAAYC,aACZA,IAEA,MAAMG,EAAO,+BAA+BV,qHAE8BK,WAAqBD,sGAejG,SAAsBO,GACpB,GAAIA,EACF,OAAIA,EAAOlB,OAAS,GACXkB,EAAOC,MAAM,EAAG,IAAM,MAExBD,C,CAlBsDE,CACjDT,oDAqBMU,EAnBiCX,EAoBjDW,EAAMrB,OAAS,EACV,GAAGqB,EAAM,GAAGC,SAASD,EAAM,GAAGC,cAMzC,SAAoBD,GAClBA,EAAME,KAAIC,GAAQA,EAAKF,OAAMG,KAAK,K,CALzBC,CAAWL,QAQFM,EA9BhBd,EA+BEc,EACKA,EAAKR,MAAM,EAAG,GAEN,yCAjCcL,EAAac,QAAQ,uEA6BtD,IAAoBD,EAZEN,EAZpBnC,EAAKK,iBAAiBsC,mBAAmB,YAAaZ,E,CA9GxD/B,EAAKC,aAAa2C,iBAAiB,QAAStC,GAC5CN,EAAKI,WAAWwC,iBAAiB,SAYjC,SAAyBrC,GACvBP,EAAKC,aAAaO,MAAMC,gBAAkB,cAC1CT,EAAKC,aAAaO,MAAME,OAAS,oBACjCV,EAAKI,WAAWI,MAAMC,gBAAkB,UACxCT,EAAKI,WAAWI,MAAME,OAAS,oBAsCjC,WACEV,EAAKK,iBAAiBM,UAAY,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,aAAaC,OAAQF,GAAK,EAE5C,GAAIC,aAAaE,IAAIH,GAAGI,SAAS,SAAU,CAEzC,MAAMC,EAAUC,KAAKC,MAAMN,aAAaO,QAAQP,aAAaE,IAAIH,KACjEd,EAAWuB,GAAKJ,EAChBnB,EACGwB,kBACAC,MACC,EAACC,OACCA,EAAMH,GACNA,EAAEI,eACFA,EAAcC,YACdA,EAAWC,aACXA,EAAYC,aACZA,MAEAC,EAAW,C,OACTL,E,GACAH,E,eACAI,E,YACAC,E,aACAC,E,aACAC,GACA,G,EA9DZiB,E,IAjBFC,OAAOF,iBAAiB,OAAQtC,E","sources":["src/js/library.js","src/js/filmCards-library.js"],"sourcesContent":["// import './header.js';\n// import './pagination.js';\nimport './modal-team.js';\nimport './localStorage.js';\nimport './filmCards-library.js';\nimport './header-library';\n","import MovesApiService from './fetchMove';\n// import createCard from './filmCards-home';\nconst movieFetch = new MovesApiService();\n\nconst refs = {\n  watchedBtnLb: document.querySelector('.watchedBtnLb'),\n  queueBtnLb: document.querySelector('.queueBtnLb'),\n  libraryCardsList: document.querySelector('.library-cards__list'),\n};\n\nrefs.watchedBtnLb.addEventListener('click', onWatchedBtnLbClick);\nrefs.queueBtnLb.addEventListener('click', onQueueBtnClick);\nwindow.addEventListener('load', onWatchedBtnLbClick);\n\nfunction onWatchedBtnLbClick(e) {\n  refs.queueBtnLb.style.backgroundColor = 'transparent';\n  refs.queueBtnLb.style.border = '1px solid #FFFFFF';\n  refs.watchedBtnLb.style.backgroundColor = '#ff6b01';\n  refs.watchedBtnLb.style.border = '1px solid #ff6b01';\n  //   createWathedGalery();\n  createWatchedList();\n}\n\nfunction onQueueBtnClick(e) {\n  refs.watchedBtnLb.style.backgroundColor = 'transparent';\n  refs.watchedBtnLb.style.border = '1px solid #FFFFFF';\n  refs.queueBtnLb.style.backgroundColor = '#ff6b01';\n  refs.queueBtnLb.style.border = '1px solid #ff6b01';\n\n  createQueueList();\n}\n\nfunction createWatchedList() {\n  refs.libraryCardsList.innerHTML = '';\n  for (let i = 0; i < localStorage.length; i += 1) {\n    // console.log(localStorage.length);\n    if (localStorage.key(i).includes('watched')) {\n      // console.log(localStorage.getItem(localStorage.key(i)));\n      const movieId = JSON.parse(localStorage.getItem(localStorage.key(i)));\n      movieFetch.id = movieId;\n      movieFetch\n        .fetchMoviesInfo()\n        .then(\n          ({\n            genres,\n            id,\n            original_title,\n            poster_path,\n            release_date,\n            vote_average,\n          }) => {\n            createCard({\n              genres,\n              id,\n              original_title,\n              poster_path,\n              release_date,\n              vote_average,\n            });\n          }\n        );\n    }\n  }\n}\n\nfunction createQueueList() {\n  refs.libraryCardsList.innerHTML = '';\n  for (let i = 0; i < localStorage.length; i += 1) {\n    // console.log(localStorage.length);\n    if (localStorage.key(i).includes('queue')) {\n      // console.log(localStorage.getItem(localStorage.key(i)));\n      const movieId = JSON.parse(localStorage.getItem(localStorage.key(i)));\n      movieFetch.id = movieId;\n      movieFetch\n        .fetchMoviesInfo()\n        .then(\n          ({\n            genres,\n            id,\n            original_title,\n            poster_path,\n            release_date,\n            vote_average,\n          }) => {\n            createCard({\n              genres,\n              id,\n              original_title,\n              poster_path,\n              release_date,\n              vote_average,\n            });\n          }\n        );\n    }\n  }\n}\n\nfunction createCard({\n  genres,\n  id,\n  original_title,\n  poster_path,\n  release_date,\n  vote_average,\n}) {\n  const card = `<li class=\"cards__item\" id=\"${id}\">\n          <a class=\"cards__link\">\n              <img class=\"cards__img\" src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${original_title}\" loading=\"lazy\">\n          </a>\n              <div class=\"cards__text\"><h2 class=\"cards__name\">${getShortName(\n                original_title\n              )}</h2>\n              <p class=\"cards__genres\"> ${changeGanres(genres)} | ${createYear(\n    release_date\n  )}<span class=\"film-rating\"> ${vote_average.toFixed(1)}</span>\n              </p>\n              </div>\n          </li>`;\n\n  refs.libraryCardsList.insertAdjacentHTML('beforeend', card);\n}\n\nfunction getShortName(string) {\n  if (string) {\n    if (string.length > 32) {\n      return string.slice(0, 32) + '...';\n    }\n    return string;\n  }\n}\n\nfunction changeGanres(array) {\n  if (array.length > 2) {\n    return `${array[0].name}, ${array[1].name}, other`;\n  } else {\n    return showGanres(array);\n  }\n}\n\nfunction showGanres(array) {\n  array.map(item => item.name).join(', ');\n}\n\nfunction createYear(data) {\n  if (data) {\n    return data.slice(0, 4);\n  } else {\n    return (data = 'Not found');\n  }\n}\n"],"names":["parcelRequire","$869412cab76482af$var$movieFetch","default","$869412cab76482af$var$refs","watchedBtnLb","document","querySelector","queueBtnLb","libraryCardsList","$869412cab76482af$var$onWatchedBtnLbClick","e","style","backgroundColor","border","innerHTML","i","localStorage","length","key","includes","movieId","JSON","parse","getItem","id","fetchMoviesInfo","then","genres","original_title","poster_path","release_date","vote_average","$869412cab76482af$var$createCard","$869412cab76482af$var$createWatchedList","card","string","slice","$869412cab76482af$var$getShortName","array","name","map","item","join","$869412cab76482af$var$showGanres","data","toFixed","insertAdjacentHTML","addEventListener","$869412cab76482af$var$createQueueList","window"],"version":3,"file":"library.ab06061a.js.map"}